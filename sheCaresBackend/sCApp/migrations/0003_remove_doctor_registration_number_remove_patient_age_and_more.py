# Generated by Django 5.0.12 on 2025-02-05 19:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sCApp', '0002_doctor_patient_delete_user'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='doctor',
            name='registration_number',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='age',
        ),
        migrations.AddField(
            model_name='doctor',
            name='available_days',
            field=models.CharField(default='Monday', max_length=100),
        ),
        migrations.AddField(
            model_name='doctor',
            name='available_times',
            field=models.TextField(default='xyz'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='name',
            field=models.CharField(default='xyz', max_length=100),
        ),
        migrations.AddField(
            model_name='patient',
            name='email',
            field=models.EmailField(default='123@gmail.com', max_length=254, unique=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='name',
            field=models.CharField(default='xyz', max_length=100),
        ),
        migrations.AddField(
            model_name='patient',
            name='phone_number',
            field=models.CharField(default='xyz', max_length=15),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='specialization',
            field=models.CharField(default='xyz', max_length=100),
        ),
        migrations.AlterModelTable(
            name='doctor',
            table=None,
        ),
        migrations.AlterModelTable(
            name='patient',
            table=None,
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sCApp.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sCApp.patient')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('doctor', 'Doctor'), ('patient', 'Patient')], max_length=10)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('doctor_id', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='sCApp_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='sCApp_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sCApp.user'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sCApp.user'),
        ),
    ]
